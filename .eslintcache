[{"/home/bshoop/homeinventory/src/index.js":"1","/home/bshoop/homeinventory/src/App.js":"2","/home/bshoop/homeinventory/src/reportWebVitals.js":"3","/home/bshoop/homeinventory/src/ApplicationView.js":"4","/home/bshoop/homeinventory/src/AddItem.js":"5","/home/bshoop/homeinventory/src/ItemCard.js":"6","/home/bshoop/homeinventory/src/AppDataProvider.js":"7","/home/bshoop/homeinventory/src/SearchTerms.js":"8","/home/bshoop/homeinventory/src/RoomFilter.js":"9"},{"size":625,"mtime":1613326586525,"results":"10","hashOfConfig":"11"},{"size":2150,"mtime":1613326407996,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1608485332842,"results":"13","hashOfConfig":"11"},{"size":763,"mtime":1613326570593,"results":"14","hashOfConfig":"11"},{"size":6331,"mtime":1613326290485,"results":"15","hashOfConfig":"11"},{"size":1517,"mtime":1613326615867,"results":"16","hashOfConfig":"11"},{"size":1603,"mtime":1609473624681,"results":"17","hashOfConfig":"11"},{"size":567,"mtime":1613325879827,"results":"18","hashOfConfig":"11"},{"size":1638,"mtime":1613325879822,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lfjppi",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/home/bshoop/homeinventory/src/index.js",[],"/home/bshoop/homeinventory/src/App.js",["41"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { ItemCard } from \"./ItemCard\"\nimport { ItemContext } from \"./AppDataProvider\"\nimport { ItemSearch } from \"./SearchTerms\"\nimport { RoomFilter } from \"./RoomFilter\"\nimport './App.css';\n\nexport function HomePage() {\n  const { item, getItems, searchTerms, roomFilter } = useContext(ItemContext)\n  const history = useHistory();\n  const [filteredItems, setFiltered] = useState([])\n\n  useEffect(() => {\n    getItems()\n  }, [])\n\n  useEffect(() => {\n    if (searchTerms !== \"\") {\n      const subset = item.filter(item => item.itemName.toLowerCase().includes(searchTerms.toLowerCase().trim()))\n      setFiltered(subset)\n    } else if (roomFilter !== \"\") {\n      const subset2 = item.filter(item => item.itemRoom.includes(roomFilter))\n      setFiltered(subset2)\n    } else {\n      setFiltered(item)\n    }\n  }, [searchTerms, roomFilter, item])\n\n  return (\n    <>\n      <header className=\"PageHeaderContainer\">\n        <button className=\"AddItemButton\"\n          onClick={() => {\n            history.push(`/additem`)\n          }}\n          type=\"button\">Add New Item\n        </button>\n        <ItemSearch key={item.id} item={item} />\n        <RoomFilter key={item.id} item={item} />\n        <h1 className=\"HomeInventoryTitle\">Home Inventory</h1>\n      </header>\n      <div className=\"BodyContainer\">\n        <div className=\"InventoryContainer\">\n          <div className=\"InventoryHeader\">\n            <div className=\"InventoryNameHeader\">Item Name</div>\n            <div className=\"InventoryRoomHeader\">Room</div>\n            <div className=\"InventoryDescriptionHeader\">Description</div>\n            <div className=\"InventorySerialHeader\">Serial Number</div>\n            <div className=\"InventoryNotesHeader\">Notes</div>\n            <div className=\"InventoryBlankHeader\"></div>\n          </div>\n          <div className=\"ItemCardReturn\">\n            {\n              filteredItems.map(item => {\n                return <ItemCard key={item.id} item={item} />\n              })\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}",["42","43"],"/home/bshoop/homeinventory/src/reportWebVitals.js",[],"/home/bshoop/homeinventory/src/ApplicationView.js",[],"/home/bshoop/homeinventory/src/AddItem.js",["44"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { ItemContext } from \"./AppDataProvider.js\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport './AddItem.css';\n\nexport const AddItem = () => {\n    //assigns the state set by setNewItem to the item variable \n    const [item, setNewItem] = useState({})\n\n    //assigns the useHistory hook to the history variable \n    const history = useHistory();\n\n    //assigns to the getItemById, addItems, editItems, and getItems variables the values returned by ItemContext \n    const { getItemById, addItems, editItems, getItems } = useContext(ItemContext)\n\n    //assigns itemId variable the route parameter value\n    const { itemId } = useParams()\n\n    /*assigns addedItem variable the value of an item object. Then returns the value associated with each of the form's named inputs. \n    Finally stores those returned inputs as a new item object*/\n    const handleControlledInputChange = (event) => {\n        const addedItem = item\n        addedItem[event.target.name] = event.target.value\n        setNewItem(addedItem)\n    }\n\n    useEffect(() => {\n        getItems()\n    }, [])\n\n    useEffect(() => {\n        if (itemId) {\n            getItemById(itemId)\n                .then(item => {\n                    setNewItem(item)\n                })\n        } else {\n        }\n    }, [getItemById, itemId])\n\n    const constructItemObject = () => {\n        if (itemId) {\n            editItems({\n                id: item.id,\n                itemName: item.itemName,\n                itemRoom: item.itemRoom,\n                itemDescription: item.itemDescription,\n                itemSerialNumber: item.itemSerialNumber,\n                itemNotes: item.itemNotes\n            })\n                .then(() => history.push(\"/\"))\n        } else {\n            addItems({\n                id: item.id,\n                itemName: item.itemName,\n                itemRoom: item.itemRoom,\n                itemDescription: item.itemDescription,\n                itemSerialNumber: item.itemSerialNumber,\n                itemNotes: item.itemNotes\n            })\n                .then(() => history.push(\"/\"))\n        }\n    }\n\n    return (\n        <>\n            <header className=\"PageHeaderContainer-AddItem\">\n                <h1 className=\"HomeInventoryTitle-AddItem\">Home Inventory</h1>\n            </header>\n\n            <div className=\"BodyContainer\">\n                <div className=\"InputsContainer\">\n                    <div className=\"RoomInputContainer\">\n                        <label className=\"RoomInputTitle\">Room</label>\n                        <select className=\"RoomInput\" name=\"itemRoom\" onChange={handleControlledInputChange} >\n                            <option selected>{itemId ? item.itemRoom : \"\"}</option>\n                            <option>Attic</option>\n                            <option>Back Yard</option>\n                            <option>Bed Room 1</option>\n                            <option>Bed Room 1 Closet</option>\n                            <option>Bed Room 2</option>\n                            <option>Bed Room 2 Closet</option>\n                            <option>Bed Room 3</option>\n                            <option>Bed Room 3 Closet</option>\n                            <option>Bonus Room</option>\n                            <option>Dining Room</option>\n                            <option>Downstairs Bathroom</option>\n                            <option>Downstairs Closet</option>\n                            <option>Foyer</option>\n                            <option>Front Porch</option>\n                            <option>Front Yard</option>\n                            <option>Garage</option>\n                            <option>Guest Bathroom</option>\n                            <option>Kitchen</option>\n                            <option>Laundry Room</option>\n                            <option>Living Room</option>\n                            <option>Main Bathroom</option>\n                            <option>Mud Room</option>\n                            <option>Patio</option>\n                            <option>Stairwell</option>\n                        </select>\n                    </div>\n\n                    <form action=\"/action_page.php\">\n                        <label className=\"ItemNameTitle\">Item Name:  </label>\n                        <input type=\"text\" className=\"ItemNameInput\" name=\"itemName\" onChange={handleControlledInputChange} placeholder={itemId ? item.itemName : \"\"} />\n                    </form>\n\n                    <label className=\"DescriptionTitle\">Item Description:  </label>\n                    <div className=\"DescriptionContainer\">\n                        <textarea type=\"textarea\" className=\"DescriptionInput\" name=\"itemDescription\" onChange={handleControlledInputChange} placeholder={itemId ? item.itemDescription : \"\"} />\n                    </div>\n\n                    <div className=\"ItemSerialContainer\">\n                        <label className=\"ItemSerialTitle\">Item Serial Number:  </label>\n                        <input type=\"text\" className=\"ItemSerialInput\" name=\"itemSerialNumber\" onChange={handleControlledInputChange} placeholder={itemId ? item.itemSerialNumber : \"\"} />\n                    </div>\n\n                    <label className=\"ItemNotesTitle\">Item Notes:  </label>\n                    <div className=\"ItemNotesContainer\">\n                        <textarea type=\"textarea\" className=\"ItemNotesInput\" name=\"itemNotes\" onChange={handleControlledInputChange} placeholder={itemId ? item.itemNotes : \"\"} />\n                    </div>\n                </div>\n\n                <div className=\"AddItemButtonsContainer\">\n                    <button className=\"SaveAddItem\"\n                        onClick={item => {\n                            item.preventDefault()\n                            constructItemObject()\n                            history.push(`/`)\n                        }}\n                        type=\"button\">Save Item\n                    </button>\n\n                    <button className=\"CancelAddItem\"\n                        onClick={() => {\n                            history.push(`/`)\n                        }}\n                        type=\"submit\">Cancel\n                    </button>\n                </div>\n            </div>\n        </>\n    );\n}","/home/bshoop/homeinventory/src/ItemCard.js",[],"/home/bshoop/homeinventory/src/AppDataProvider.js",[],"/home/bshoop/homeinventory/src/SearchTerms.js",[],"/home/bshoop/homeinventory/src/RoomFilter.js",[],{"ruleId":"45","severity":1,"message":"46","line":16,"column":6,"nodeType":"47","endLine":16,"endColumn":8,"suggestions":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"45","severity":1,"message":"46","line":29,"column":8,"nodeType":"47","endLine":29,"endColumn":10,"suggestions":"53"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.","ArrayExpression",["54"],"no-native-reassign",["55"],"no-negated-in-lhs",["56"],["57"],{"desc":"58","fix":"59"},"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"60"},"Update the dependencies array to be: [getItems]",{"range":"61","text":"62"},{"range":"63","text":"62"},[533,535],"[getItems]",[1146,1148]]